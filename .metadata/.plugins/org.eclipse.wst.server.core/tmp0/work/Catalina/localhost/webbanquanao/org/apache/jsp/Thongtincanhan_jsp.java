/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.0-M22
 * Generated at: 2024-12-22 16:53:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import model.Quyen;
import model.User;
import java.util.List;
import Reponsitory.LaydulieuReponsitory;

public final class Thongtincanhan_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.User");
    _jspx_imports_classes.add("Reponsitory.LaydulieuReponsitory");
    _jspx_imports_classes.add("model.Quyen");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Thông Tin Cá Nhân</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Thiết lập chung */\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Arial', sans-serif;\r\n");
      out.write("            background-color: #f7f7f7; /* Nền trắng nhẹ */\r\n");
      out.write("            color: #333;\r\n");
      out.write("            line-height: 1.8;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            width: 90%;\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Header */\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Bóng đổ nhẹ cho header */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header h1 {\r\n");
      out.write("            font-size: 2.5rem;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("            letter-spacing: 2px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Card thông tin cá nhân */\r\n");
      out.write("        .profile-card {\r\n");
      out.write("            background-color: #ffffff;\r\n");
      out.write("            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            transform: scale(1);\r\n");
      out.write("            transition: transform 0.3s ease-in-out;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .profile-card:hover {\r\n");
      out.write("            transform: scale(1.05);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .avatar {\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            width: 180px;\r\n");
      out.write("            height: 180px;\r\n");
      out.write("            margin-right: 20px;\r\n");
      out.write("            border: 5px solid #e0e0e0; /* Biên mờ */\r\n");
      out.write("            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .profile-info {\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("            color: #555; /* Chữ màu xám nhẹ */\r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .profile-info h2 {\r\n");
      out.write("            font-size: 2rem;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("            letter-spacing: 1px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .profile-info p {\r\n");
      out.write("            font-size: 1.2rem;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .profile-info strong {\r\n");
      out.write("            color: #ff7043; /* Màu cam nhẹ */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Footer */\r\n");
      out.write("        footer {\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            color: #555;\r\n");
      out.write("            padding: 10px 0;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-top: 40px;\r\n");
      out.write("            font-size: 1.2rem;\r\n");
      out.write("            border-top: 3px solid #f0f0f0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Buttons */\r\n");
      out.write("        .btn {\r\n");
      out.write("            padding: 12px 25px;\r\n");
      out.write("            background-color: #ff7043; /* Màu cam dịu nhẹ */\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 30px;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("            margin: 10px 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn:hover {\r\n");
      out.write("            background-color: #e64a19; /* Màu cam đậm khi hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Responsive Design */\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .profile-card {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("                padding: 20px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .avatar {\r\n");
      out.write("                margin-bottom: 20px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .profile-info {\r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 480px) {\r\n");
      out.write("            header h1 {\r\n");
      out.write("                font-size: 2rem;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .profile-info h2 {\r\n");
      out.write("                font-size: 1.5rem;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .profile-info p {\r\n");
      out.write("                font-size: 1rem;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            footer {\r\n");
      out.write("                font-size: 1rem;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <header>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <h1>Thông Tin Cá Nhân</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("    ");

    LaydulieuReponsitory lg = new LaydulieuReponsitory();
    HttpSession s = request.getSession(false);
    List<User> l = (List<User>) session.getAttribute("Ghinhotaikhoan");
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <main>\r\n");
      out.write("        <div class=\"container profile-card\">\r\n");
      out.write("            <img src=\"images/avatar-cute-1.jpg\" alt=\"Avatar\" class=\"avatar\">\r\n");
      out.write("            <div class=\"profile-info\">\r\n");
      out.write("            ");

            if(l != null){
            for(User u : l){ 
      out.write("\r\n");
      out.write("                <h2>");
      out.print(u.getHoTen() );
      out.write("</h2>\r\n");
      out.write("                <p><strong>Tuổi:</strong> 20</p>\r\n");
      out.write("                <p><strong>Số điện thoại:</strong> ");
      out.print(u.getSoDienThoai() );
      out.write("</p>\r\n");
      out.write("                <p><strong>Email:</strong> ");
      out.print(u.getEmail() );
      out.write("</p>\r\n");
      out.write("                <p><strong>Quê quán:</strong> ");
      out.print(u.getDiaChi() );
      out.write("</p>\r\n");
      out.write("                ");
if(u.getMaQuyen()==1){
      out.write("\r\n");
      out.write("                <p><strong>Quyền:</strong> Quản trị viên</p>\r\n");
      out.write("                ");
}else{ 
      out.write("\r\n");
      out.write("                <p><strong>Quyền:</strong> Khách hàng</p>\r\n");
      out.write("                ");
} }}else{
      out.write("\r\n");
      out.write("                 <script >\r\n");
      out.write("                alert(\"Vui lòng đăng nhập để xem thông tin\"); // Hiển thị thông báo\r\n");
      out.write("                window.location.href = \"login.jsp\";\r\n");
      out.write("              </script>\r\n");
      out.write("                ");
} 
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                <a href=\"https://www.facebook.com/profile.php?id=100056228993711\"> <button class=\"btn\">Liên hệ</button></a>\r\n");
      out.write("                <button class=\"btn\" onclick=\"goBack()\">Quay lại</button>\r\n");
      out.write("                <a href=\"Doimatkhau.jsp\"> <button class=\"btn\">Chỉnh sửa</button></a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </main>\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <p>&copy; 2024 Thông Tin Cá Nhân | Designed by Your Name</p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("<script>\r\n");
      out.write("    function goBack() {\r\n");
      out.write("        window.history.back(); // Quay lại trang trước\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
