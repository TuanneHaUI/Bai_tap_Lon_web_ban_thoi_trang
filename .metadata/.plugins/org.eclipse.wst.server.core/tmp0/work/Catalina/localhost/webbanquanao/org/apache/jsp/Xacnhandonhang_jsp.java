/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.0-M22
 * Generated at: 2024-12-18 17:38:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class Xacnhandonhang_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"vi\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Xác Nhận Đơn Hàng</title>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            background-color: #f4f4f4;\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .container {\n");
      out.write("            width: 80%;\n");
      out.write("            max-width: 1200px;\n");
      out.write("            margin: 50px auto;\n");
      out.write("            background-color: #fff;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n");
      out.write("            padding: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .header {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .header h1 {\n");
      out.write("            font-size: 36px;\n");
      out.write("            color: #333;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .order-date {\n");
      out.write("            background-color: #e7f4e4;\n");
      out.write("            padding: 15px;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .order-date p {\n");
      out.write("            font-size: 20px;\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: #2ecc71;\n");
      out.write("            margin: 0;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .order-date span {\n");
      out.write("            font-size: 22px;\n");
      out.write("            color: #27ae60;\n");
      out.write("            font-weight: 600;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .order-summary {\n");
      out.write("            display: flex;\n");
      out.write("            flex-direction: column;\n");
      out.write("            gap: 15px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .order-item {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            padding: 10px;\n");
      out.write("            background-color: #fafafa;\n");
      out.write("            border-radius: 8px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .order-item span {\n");
      out.write("            font-size: 18px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .order-item .price {\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: #333;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .order-item .original-price {\n");
      out.write("            text-decoration: line-through;\n");
      out.write("            color: #999;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .total {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            font-size: 20px;\n");
      out.write("            margin-top: 30px;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .total .final-price {\n");
      out.write("            color: #e74c3c;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .button-group {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            gap: 20px;\n");
      out.write("            margin-top: 30px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .button {\n");
      out.write("            flex: 1;\n");
      out.write("            padding: 15px;\n");
      out.write("            color: white;\n");
      out.write("            text-align: center;\n");
      out.write("            font-size: 18px;\n");
      out.write("            font-weight: bold;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            transition: background-color 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .confirm-button {\n");
      out.write("            background-color: #2ecc71;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .confirm-button:hover {\n");
      out.write("            background-color: #27ae60;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .cancel-button {\n");
      out.write("            background-color: #e74c3c;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .cancel-button:hover {\n");
      out.write("            background-color: #c0392b;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .footer {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-top: 50px;\n");
      out.write("            font-size: 14px;\n");
      out.write("            color: #777;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .footer a {\n");
      out.write("            color: #2ecc71;\n");
      out.write("            text-decoration: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Responsive Design */\n");
      out.write("        @media (max-width: 768px) {\n");
      out.write("            .header h1 {\n");
      out.write("                font-size: 28px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .order-item span {\n");
      out.write("                font-size: 16px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .order-item {\n");
      out.write("                flex-direction: column;\n");
      out.write("                padding: 15px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .total {\n");
      out.write("                font-size: 18px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .button {\n");
      out.write("                padding: 12px;\n");
      out.write("                font-size: 16px;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @media (max-width: 480px) {\n");
      out.write("            .container {\n");
      out.write("                width: 90%;\n");
      out.write("                padding: 15px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .header h1 {\n");
      out.write("                font-size: 24px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .order-item {\n");
      out.write("                padding: 10px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .button {\n");
      out.write("                padding: 10px;\n");
      out.write("                font-size: 14px;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("<form action=\"XacNhanandHuyDonHang\" method=\"post\">\n");
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"header\">\n");
      out.write("        <h1>Xác Nhận Đơn Hàng</h1>\n");
      out.write("    </div>\n");
      out.write("    ");

    String hoTen = (String) request.getAttribute("hoTen");
    String soDienThoai = (String) request.getAttribute("soDienThoai");
    String diaChi = (String) request.getAttribute("diaChi"); 
    String maTaiKhoanUser = (String) request.getAttribute("maTaiKhoanUser"); 
    
    String kichThuoc = (String) request.getAttribute("kichThuoc");
    String mauSac = (String) request.getAttribute("mauSac");
    String soLuong = (String) request.getAttribute("soLuong");
    int id = (int) request.getAttribute("idSanPham");
    float giaCU = (float) request.getAttribute("gia");
    String tenSanPham = (String) request.getAttribute("tenSanPham");
    String time = (String) request.getAttribute("thoiGian");
    float giaSauKhiGiam = (float) request.getAttribute("giaSauKhiGiam");
    
      out.write("\n");
      out.write("    <!-- Hiển thị ngày đặt hàng -->\n");
      out.write("    <div class=\"order-date\">\n");
      out.write("        <p><strong>Ngày Đặt Hàng: ");
      out.print(time );
      out.write("</strong></p>\n");
      out.write("    </div>\n");
      out.write("    <input type=\"hidden\" name=\"mauSac\" value=\"");
      out.print(mauSac );
      out.write("\">\n");
      out.write("    <input type=\"hidden\" name=\"kichThuoc\" value=\"");
      out.print(kichThuoc );
      out.write("\">\n");
      out.write("    <input type=\"hidden\" name=\"soLuong\" value=\"");
      out.print(soLuong );
      out.write("\">\n");
      out.write("    <input type=\"hidden\" name=\"id\" value=\"");
      out.print(id );
      out.write("\">\n");
      out.write("    <input type=\"hidden\" name=\"soDienThoai\" value=\"");
      out.print(soDienThoai );
      out.write("\">\n");
      out.write("    <input type=\"hidden\" name=\"hoTen\" value=\"");
      out.print(hoTen );
      out.write("\">\n");
      out.write("    <input type=\"hidden\" name=\"diaChi\" value=\"");
      out.print(diaChi );
      out.write("\">\n");
      out.write("    <input type=\"hidden\" name=\"time\" value=\"");
      out.print(time );
      out.write("\">\n");
      out.write("     <input type=\"hidden\" name=\"maTaiKhoanUser\" value=\"");
      out.print(maTaiKhoanUser );
      out.write("\">\n");
      out.write("    <div class=\"order-summary\">\n");
      out.write("        <!-- Mỗi mục đơn hàng sẽ được hiển thị như sau -->\n");
      out.write("        <div class=\"order-item\">\n");
      out.write("            <span>");
      out.print(tenSanPham );
      out.write("</span>\n");
      out.write("            <input type=\"hidden\" name=\"tenSanPham\" value=\"");
      out.print(tenSanPham );
      out.write("\">\n");
      out.write("            <span class=\"price original-price\">");
      out.print(giaCU );
      out.write("</span>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"order-item\">\n");
      out.write("            <span>Giảm giá</span>\n");
      out.write("            ");
if(giaSauKhiGiam != 0){ 
      out.write("\n");
      out.write("            <span class=\"price\">-");
      out.print( giaCU - giaSauKhiGiam );
      out.write("</span>\n");
      out.write("            ");
}else{ 
      out.write("\n");
      out.write("             <span class=\"price\">");
      out.print(0);
      out.write("</span>\n");
      out.write("             ");
} 
      out.write("\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"total\">\n");
      out.write("        <span>Tổng cộng</span>\n");
      out.write("        ");
if(giaSauKhiGiam !=0){ 
      out.write("\n");
      out.write("        <span class=\"final-price\">");
      out.print(giaSauKhiGiam );
      out.write("</span>\n");
      out.write("        <input type=\"hidden\" name=\"gia\" value=\"");
      out.print(giaSauKhiGiam );
      out.write("\">\n");
      out.write("        ");
}else {
      out.write("\n");
      out.write("        <span class=\"final-price\">");
      out.print(giaCU );
      out.write("</span>\n");
      out.write("        <input type=\"hidden\" name=\"gia\" value=\"");
      out.print(giaCU );
      out.write("\">\n");
      out.write("        ");
} 
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"button-group\">\n");
      out.write("        <button class=\"button confirm-button\" onclick=\"confirmOrder()\" name=\"Xacnhandonhang\" value=\"Xacnhandonhang\">Xác Nhận Đơn Hàng</button>\n");
      out.write("        <button class=\"button cancel-button\" onclick=\"cancelOrder()\" name=\"Huydonhang\" value=\"Huydonhang\">Hủy</button>\n");
      out.write("    </div>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"footer\">\n");
      out.write("    <p>© 2024 <a href=\"#\">Cửa Hàng Online</a>. Tất cả các quyền được bảo lưu.</p>\n");
      out.write("</div> \n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    // Hàm để hiển thị ngày đặt hàng\n");
      out.write("    function formatDate(date) {\n");
      out.write("        const day = date.getDate().toString().padStart(2, '0');\n");
      out.write("        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n");
      out.write("        const year = date.getFullYear();\n");
      out.write("        return `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${day}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${year}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Hiển thị ngày đặt hàng hiện tại\n");
      out.write("    const today = new Date();\n");
      out.write("    document.getElementById(\"order-date\").innerText = formatDate(today);\n");
      out.write("\n");
      out.write("    // Hàm xác nhận đơn hàng\n");
      out.write("    function confirmOrder() {\n");
      out.write("        alert(\"Đơn hàng của bạn đã được xác nhận thành công!\");\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Hàm hủy đơn hàng\n");
      out.write("    function cancelOrder() {\n");
      out.write("    	 alert(\"Bạn có muốn hủy đơn hàng không!\");\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
