/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.0-M22
 * Generated at: 2024-12-20 16:20:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import model.SanPham;
import model.ChiTietSanPham;
import model.DonHang;
import Reponsitory.LaydulieuReponsitory;
import Reponsitory.Laydulieuchonguoidung;
import model.User;
import java.util.List;

public final class Thongtindonhangdamua_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(10);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.ChiTietSanPham");
    _jspx_imports_classes.add("model.DonHang");
    _jspx_imports_classes.add("model.User");
    _jspx_imports_classes.add("Reponsitory.LaydulieuReponsitory");
    _jspx_imports_classes.add("Reponsitory.Laydulieuchonguoidung");
    _jspx_imports_classes.add("model.SanPham");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Thông Tin Đơn Hàng</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f7fa;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("        .order-container {\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("        }\r\n");
      out.write("        .order-header {\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        .order-header h2 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 1.8rem;\r\n");
      out.write("        }\r\n");
      out.write("        .order-header .btn-back {\r\n");
      out.write("            background: #ffc107;\r\n");
      out.write("            border: none;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("        }\r\n");
      out.write("        .order-header .btn-back:hover {\r\n");
      out.write("            background: #e0a800;\r\n");
      out.write("        }\r\n");
      out.write("        .table-responsive {\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .table {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("        }\r\n");
      out.write("        .table th {\r\n");
      out.write("            background-color: #eaf4ff;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #495057;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            border: 1px solid #dee2e6;\r\n");
      out.write("        }\r\n");
      out.write("        .table td {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("            border: 1px solid #dee2e6;\r\n");
      out.write("        }\r\n");
      out.write("        .table-striped tbody tr:nth-of-type(odd) {\r\n");
      out.write("            background-color: #f9fcff;\r\n");
      out.write("        }\r\n");
      out.write("        .date {\r\n");
      out.write("            font-size: 0.9em;\r\n");
      out.write("            color: #6c757d;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-back {\r\n");
      out.write("            margin-left: 20px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            background-color: #6c757d;\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-back:hover {\r\n");
      out.write("            background-color: #5a6268;\r\n");
      out.write("        }\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .order-header {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("                align-items: flex-start;\r\n");
      out.write("            }\r\n");
      out.write("            .order-header h2 {\r\n");
      out.write("                margin-bottom: 10px;\r\n");
      out.write("                font-size: 1.4rem;\r\n");
      out.write("            }\r\n");
      out.write("            .table-responsive {\r\n");
      out.write("                padding: 10px;\r\n");
      out.write("            }\r\n");
      out.write("            .table {\r\n");
      out.write("                font-size: 0.85rem;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"order-container\">\r\n");
      out.write("    <div class=\"order-header\">\r\n");
      out.write("    <a href=\"Laydulieusanpham\">\r\n");
      out.write("     <button class=\"btn-back\">⟵ Quay Lại</button>\r\n");
      out.write("    </a>\r\n");
      out.write("       \r\n");
      out.write("        <h2>Thông Tin Đơn Hàng</h2>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"table-responsive\">\r\n");
      out.write("        <table class=\"table table-striped\">\r\n");
      out.write("            <thead class=\"thead-light\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>#</th>\r\n");
      out.write("                    <th>Tên Khách Hàng</th>\r\n");
      out.write("                    <th>Số Điện Thoại</th>\r\n");
      out.write("                    <th>Địa Chỉ Giao Hàng</th>\r\n");
      out.write("                    <th>Tên Sản Phẩm</th>\r\n");
      out.write("                    <th>Kích Thước</th>\r\n");
      out.write("                    <th>Màu Sắc</th>\r\n");
      out.write("                    <th>Số Lượng</th>\r\n");
      out.write("                    <th>Giá</th>\r\n");
      out.write("                    <th>Trạng Thái</th>\r\n");
      out.write("                    <th>Ngày Đặt Hàng</th>\r\n");
      out.write("                    \r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            ");

            HttpSession ss = request.getSession(false);
            List<User> user = (List<User>) ss.getAttribute("Ghinhotaikhoan");
            if(user != null){
            	Laydulieuchonguoidung lgn = new Laydulieuchonguoidung();
            	LaydulieuReponsitory lg = new LaydulieuReponsitory();
            	List<DonHang> dh = lgn.LayThongTinDonHang();
            	List<ChiTietSanPham> c = lg.Laythongtinchitietsanpham();
            	List<SanPham> sp = lg.Laythongtinsanpham();
            	int i = 1;
            	for(User u : user){
            	for(DonHang d : dh){
            		if(d.getMaNguoiDung()==u.getMaTaiKhoan()){
            
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print(i );
      out.write("</td>\r\n");
      out.write("                    ");
i = i+1; 
      out.write("\r\n");
      out.write("                    <td>");
      out.print(d.getTenKhachHang() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print(d.getSoDienThoai() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print(d.getDiaChiGiaoHang() );
      out.write("</td>\r\n");
      out.write("                    ");

                    for(ChiTietSanPham chiTiet : c){
                    if(chiTiet.getIdChiTietSanPham()==d.getMaChiTietSanPham()){
                    	for(SanPham s : sp){
                    		if(s.getMaSanpham()==chiTiet.getMaSanPham()){
                    
                    
                    
      out.write("\r\n");
      out.write("                    <td>");
      out.print(s.getTenSanPham() );
      out.write("</td>\r\n");
      out.write("                    ");
} }
      out.write("\r\n");
      out.write("                    <td>");
      out.print(chiTiet.getKichCo() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print(chiTiet.getMauSac() );
      out.write("</td>\r\n");
      out.write("                    ");
}} 
      out.write("\r\n");
      out.write("                    <td>");
      out.print(d.getSoLuong() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print(d.getGia() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print(d.getTrangThai() );
      out.write("</td>\r\n");
      out.write("                    <td class=\"date\">");
      out.print(d.getNgayDatHang() );
      out.write("</td>\r\n");
      out.write("                    ");
if(d.getTrangThai().equalsIgnoreCase("đang chuẩn bị hàng")) {
      out.write("\r\n");
      out.write("                    <td>\r\n");
      out.write("                    <form action=\"Huydonhangdadat\" method=\"post\">\r\n");
      out.write("                    <input name=\"idDonHang\" value=\"");
      out.print(d.getMaDonHang());
      out.write("\" type=\"hidden\">\r\n");
      out.write("                    <button class=\"btn btn-danger btn-lg\" onclick=\"thongbao()\">Hủy</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                     </td>\r\n");
      out.write("                     ");
} 
      out.write("\r\n");
      out.write("                </tr>\r\n");
      out.write("                ");
} }}}else{
      out.write("\r\n");
      out.write("                <script >\r\n");
      out.write("                alert(\"Vui lòng đăng nhập để xem thông tin\"); // Hiển thị thông báo\r\n");
      out.write("                window.location.href = \"login.jsp\";\n");
      out.write("              </script>\r\n");
      out.write("                ");
} 
      out.write("\r\n");
      out.write("                <!-- Add more rows dynamically -->\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("thongbao(){\r\n");
      out.write("	alert(\"Bạn có chắc xóa đơn hàng này chứ\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
