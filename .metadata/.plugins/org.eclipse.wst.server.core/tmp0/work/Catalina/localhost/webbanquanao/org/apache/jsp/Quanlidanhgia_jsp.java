/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.0-M22
 * Generated at: 2024-12-23 08:34:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import model.Danhgia;
import java.util.List;
import Reponsitory.Laydulieuchonguoidung;

public final class Quanlidanhgia_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("model.Danhgia");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Reponsitory.Laydulieuchonguoidung");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Quản lý Đánh giá Sản phẩm</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f4f9;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin: 20px 0;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("        }\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border-bottom: 1px solid #ddd;\r\n");
      out.write("        }\r\n");
      out.write("        th {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        tr:hover {\r\n");
      out.write("            background-color: #f1f1f1;\r\n");
      out.write("        }\r\n");
      out.write("        .star-rating {\r\n");
      out.write("            color: gold;\r\n");
      out.write("        }\r\n");
      out.write("        #search {\r\n");
      out.write("            margin: 20px 0;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("        }\r\n");
      out.write("        .back-button {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("        }\r\n");
      out.write("        .back-button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("        .feedback-container {\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("        .feedback-button {\r\n");
      out.write("            background-color: #2196F3;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        .feedback-button:hover {\r\n");
      out.write("            background-color: #0b7dda;\r\n");
      out.write("        }\r\n");
      out.write("        .feedback-textarea {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("        }\r\n");
      out.write("        .submit-feedback {\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        .submit-feedback:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <h2>Quản Lý Đánh Giá Sản Phẩm</h2>\r\n");
      out.write("\r\n");
      out.write("    <!-- Tìm kiếm theo tên tài khoản và nội dung bài viết -->\r\n");
      out.write("    <input type=\"text\" id=\"search\" onkeyup=\"searchTable()\" placeholder=\"Tìm kiếm theo tên tài khoản hoặc nội dung bài viết...\">\r\n");
      out.write("\r\n");
      out.write("    <table id=\"reviewsTable\">\r\n");
      out.write("        <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Mã Tài Khoản</th>\r\n");
      out.write("                <th>Tên Tài Khoản</th>\r\n");
      out.write("                <th>Mã Sản Phẩm</th>\r\n");
      out.write("                <th>Đánh Giá (Sao)</th>\r\n");
      out.write("                <th>Nội Dung Bài Viết</th>\r\n");
      out.write("                <th>Phản Hồi</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("        \r\n");
      out.write("        ");

        String loi = (String) request.getAttribute("Loi");
        String thongBao = (String) request.getAttribute("Thongbao");
        Laydulieuchonguoidung lgn = new Laydulieuchonguoidung();
        List<Danhgia> danhGia = lgn.LayThongTinDanhGia();
        for(Danhgia d : danhGia){
        	int i = 0;
        
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print(d.getMaNguoiDung() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(d.getTenNguoiDung() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(d.getMaSanPham() );
      out.write("</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                     (");
      out.print(d.getSoSao() );
      out.write(" sao)<span class=\"star-rating\">\r\n");
      out.write("                    ");
while(i < d.getSoSao()){ 
      out.write("\r\n");
      out.write("                    ★\r\n");
      out.write("                    ");

                    i = i+1;
                    } 
                    
      out.write("\r\n");
      out.write("                    </span>\r\n");
      out.write("                </td>\r\n");
      out.write("                <td>");
      out.print(d.getNoiDung() );
      out.write("</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <!-- Form phản hồi -->\r\n");
      out.write("                    <form action=\"Phanhoidanhgia\" method=\"post\">\r\n");
      out.write("                        <button type=\"button\" class=\"feedback-button\" onclick=\"toggleFeedback(");
      out.print(d.getMaDanhGia());
      out.write(")\">Phản hồi</button>\r\n");
      out.write("                        \r\n");
      out.write("                        <!-- Phản hồi container -->\r\n");
      out.write("                        <div class=\"feedback-container\" id=\"feedback-");
      out.print(d.getMaDanhGia());
      out.write("\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"idDanhGia\" value=\"");
      out.print(d.getMaDanhGia());
      out.write("\">\r\n");
      out.write("                            <textarea class=\"feedback-textarea\" name=\"phanHoi\" placeholder=\"Nhập phản hồi của bạn...\"></textarea>\r\n");
      out.write("                            <button type=\"submit\" class=\"submit-feedback\">Gửi Phản Hồi</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
} if(loi != null){
      out.write("\r\n");
      out.write("            <script>\r\n");
      out.write("            alert(\"Vui lòng nhập thông tin đầy đủ!\");\n");
      out.write("          </script>\r\n");
      out.write("            ");
} if(thongBao != null){
      out.write("\r\n");
      out.write("          <script>\r\n");
      out.write("            alert(\"Phản hổi thành công!\");\r\n");
      out.write("          </script>\r\n");
      out.write("          ");
} 
      out.write("\r\n");
      out.write("            <!-- Các đánh giá khác -->\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("    <a href=\"Bieudodoanhthu\" class=\"back-button\">Quay lại</a>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function searchTable() {\r\n");
      out.write("            var input, filter, table, tr, td, i, txtValue;\r\n");
      out.write("            input = document.getElementById(\"search\");\r\n");
      out.write("            filter = input.value.toUpperCase();  // Lấy giá trị tìm kiếm và chuyển thành chữ hoa\r\n");
      out.write("            table = document.getElementById(\"reviewsTable\");\r\n");
      out.write("            tr = table.getElementsByTagName(\"tr\");\r\n");
      out.write("\r\n");
      out.write("            for (i = 1; i < tr.length; i++) {\r\n");
      out.write("                tr[i].style.display = \"none\";  // Ẩn tất cả các hàng\r\n");
      out.write("                td = tr[i].getElementsByTagName(\"td\");\r\n");
      out.write("                for (var j = 1; j < td.length; j++) {  // Kiểm tra tất cả các cột\r\n");
      out.write("                    if (td[j]) {\r\n");
      out.write("                        txtValue = td[j].textContent || td[j].innerText;\r\n");
      out.write("                        if (txtValue.toUpperCase().indexOf(filter) > -1) {  // Tìm kiếm trong tất cả các cột\r\n");
      out.write("                            tr[i].style.display = \"\";  // Hiển thị hàng nếu tìm thấy\r\n");
      out.write("                            break;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function toggleFeedback(id) {\r\n");
      out.write("            var feedbackContainer = document.getElementById('feedback-' + id);\r\n");
      out.write("            if (feedbackContainer.style.display === \"none\" || feedbackContainer.style.display === \"\") {\r\n");
      out.write("                feedbackContainer.style.display = \"block\";\r\n");
      out.write("            } else {\r\n");
      out.write("                feedbackContainer.style.display = \"none\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
